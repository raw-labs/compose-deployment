services:
  postgres:
    image: postgres:12
    # The container port will be available on postgres:5432 to the other services,
    # This is left for easy debugging when needed.
    #    ports:
    #      - 54320:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: raw
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-postgres/:/docker-entrypoint-initdb.d/:ro

  creds:
    image: ${DOCKER_REGISTRY}/raw-creds-compose:${RAW_VERSION}
    entrypoint: ["/wait-for-it.sh", "postgres:5432", "--", "/opt/docker/bin/raw-creds-compose"]
    # This is required for rawcli and local Jupyter Notebooks to work
    ports:
      - "${RAW_CREDS_PORT}:54322"
    depends_on:
      - postgres
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh:ro
      - ${RAW_LICENSE}:/etc/raw-common/raw.license:ro
      - ./conf/raw-creds/application.conf:/opt/docker/conf/application.conf:ro
      - ./conf/raw-creds/logback.xml:/opt/docker/conf/logback.xml:ro
      - logs_creds:/var/log/raw
      - ${AUTH_CONF}:/opt/docker/conf/auth.conf:ro
    environment:
      JAVA_OPTS: ${JAVA_OPTS} ${CREDS_JAVA_OPTS}
      RAW_CREDS_JDBC_ENCRYPTION_KEY: ${RAW_CREDS_JDBC_ENCRYPTION_KEY}

  storage:
    image: ${DOCKER_REGISTRY}/raw-storage-compose:${RAW_VERSION}
    # This is required for rawcli and local Jupyter Notebooks to work
    ports:
      - "${RAW_STORAGE_PORT}:54323"
    volumes:
      - ${RAW_LICENSE}:/etc/raw-common/raw.license:ro
      - ./conf/raw-storage/application.conf:/opt/docker/conf/application.conf:ro
      - ./conf/raw-storage/logback.xml:/opt/docker/conf/logback.xml:ro
      - ${AUTH_CONF}:/opt/docker/conf/auth.conf:ro
      - logs_storage:/var/log/raw
      - cache:/var/tmp/rawcache
    environment:
      JAVA_OPTS: ${JAVA_OPTS} ${STORAGE_JAVA_OPTS}
      RAW_CACHE_GC_THRESHOLD: ${RAW_CACHE_GC_THRESHOLD}

  executor:
    image: ${DOCKER_REGISTRY}/raw-executor-compose:${RAW_VERSION}
    entrypoint: ["/wait-for-it.sh", "postgres:5432", "--", "/opt/docker/bin/raw-executor-compose"]
    # So this has to be opened to the web browser directly as it seems some
    # calls are made directly to the executor instead of going through the frontend.
    ports:
      - "${RAW_EXECUTOR_PORT}:54321"
    depends_on:
      - creds
      - postgres
      - storage
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh:ro
      - ${RAW_LICENSE}:/etc/raw-common/raw.license:ro
      - ./conf/raw-executor/application.conf:/opt/docker/conf/application.conf:ro
      - ./conf/raw-executor/application.ini:/opt/docker/conf/application.ini:ro
      - ./conf/raw-executor/logback.xml:/opt/docker/conf/logback.xml:ro
      - ./conf/raw-executor/driver-java-options:/opt/docker/conf/driver-java-options:ro
      - ${AUTH_CONF}:/opt/docker/conf/auth.conf:ro
      - cache:/var/tmp/rawcache
      - logs_executor:/var/log/raw
      - data:${RAW_DATA_TARGET}
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      JAVA_OPTS: ${JAVA_OPTS} ${EXECUTOR_JAVA_OPTS}
      RAW_DRIVER_MEM: ${RAW_DRIVER_MEM}
      RAW_DRIVER_CORES: ${RAW_DRIVER_CORES}
      HIVE_VERSION: ${HIVE_VERSION}
      HIVE_HOME: ${HIVE_HOME}
      HDFS_HOSTNAME: ${PUBLIC_ADDRESS}

  frontend:
    image: ${DOCKER_REGISTRY}/raw-frontend-compose:${RAW_VERSION}
    entrypoint: ["/wait-for-it.sh", "postgres:5432", "--", "/opt/docker/bin/raw-frontend-compose"]
    ports:
      - "${RAW_FRONTEND_PORT}:9000"
    depends_on:
      - creds
      - executor
      - postgres
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh:ro
      - ${RAW_LICENSE}:/etc/raw-common/raw.license:ro
      - ./conf/raw-frontend/application.conf:/opt/docker/conf/application.conf:ro
      - ./conf/raw-frontend/common.conf:/opt/docker/conf/common.conf:ro
      - ./conf/raw-frontend/logback.xml:/opt/docker/conf/logback.xml:ro
      - logs_frontend:/var/log/raw
      - ${AUTH_CONF}:/opt/docker/conf/auth.conf:ro
    environment:
      JAVA_OPTS: ${JAVA_OPTS} ${FRONTEND_JAVA_OPTS}
      PUBLIC_ADDRESS: ${PUBLIC_ADDRESS}
      RAW_EXECUTOR_PORT: ${RAW_EXECUTOR_PORT}
      RAW_CREDS_PORT: ${RAW_CREDS_PORT}
      RAW_STORAGE_PORT: ${RAW_STORAGE_PORT}
      PROXY_HTTPS_PORT: ${PROXY_HTTPS_PORT}

volumes:
  postgres:
  data:
    driver_opts:
      type: "none"
      o: "bind"
      device: "${RAW_DATA_SOURCE}"
  cache:
    driver_opts:
      type: "none"
      o: "bind"
      device: "${RAW_CACHE}"
  logs_frontend:
    driver_opts:
      type: "none"
      o: "bind"
      device: "${RAW_LOGS}/frontend"
  logs_creds:
    driver_opts:
      type: "none"
      o: "bind"
      device: "${RAW_LOGS}/creds"
  logs_storage:
    driver_opts:
      type: "none"
      o: "bind"
      device: "${RAW_LOGS}/storage"
  logs_executor:
    driver_opts:
      type: "none"
      o: "bind"
      device: "${RAW_LOGS}/executor"
  logs_driver:
    driver_opts:
      type: "none"
      o: "bind"
      device: "${RAW_LOGS}/driver"
